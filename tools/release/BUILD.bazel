load("@aspect_bazel_lib//lib:copy_to_directory.bzl", "copy_to_directory")
load("@aspect_bazel_lib//lib:write_source_files.bzl", "write_source_file")
load("@bazel_skylib//rules:native_binary.bzl", "native_binary")

config_setting(
    name = "release",
    values = {
        "compilation_mode": "opt",
    },
)

[
    platform(
        name = "{}_{}".format(os, cpu),
        constraint_values = [
            "@platforms//os:" + os,
            "@platforms//cpu:" + cpu,
            "//tools/linkers:musl" if os == "linux" else "//tools/linkers:unknown",
        ],
        visibility = ["//playwright/tools:__subpackages__"],
    )
    for os in [
        "linux",
        "macos",
    ]
    for cpu in [
        "arm64",
        "x86_64",
    ]
]

LINUX_ARTIFACTS = [
    "//playwright/tools/browser_workspace_gen:browser_workspace_gen_linux",
]

MACOS_ARTIFACTS = [
    "//playwright/tools/browser_workspace_gen:browser_workspace_gen_macos",
]

copy_to_directory(
    name = "release_artifacts",
    srcs = LINUX_ARTIFACTS + MACOS_ARTIFACTS,
    out = "artifacts",
    root_paths = ["playwright/tools/browser_workspace_gen"],
    tags = ["manual"],
)

write_source_file(
    name = "copy_release_artifacts",
    diff_test = False,
    executable = True,
    in_file = ":release_artifacts",
    out_file = "artifacts",
    tags = ["manual"],
)

native_binary(
    name = "browser_workspace_gen",
    src = select(
        {
            "@rules_playwright//tools/platforms:macos_x86_64": ":artifacts/browser_workspace_gen-x86_64-apple-darwin",
            "@rules_playwright//tools/platforms:macos_arm64": ":artifacts/browser_workspace_gen-arm64-apple-darwin",
            "@rules_playwright//tools/platforms:linux_x86_64": ":artifacts/browser_workspace_gen-x86_64-unknown-linux",
            "@rules_playwright//tools/platforms:linux_arm64": ":artifacts/browser_workspace_gen-arm64-unknown-linux",
        },
    ),
    out = "browser_workspace_gen",
)
